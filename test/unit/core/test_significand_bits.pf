! Copyright 2015-2016 Andrew Dawson, Peter Dueben
!
! Licensed under the Apache License, Version 2.0 (the "License");
! you may not use this file except in compliance with the License.
! You may obtain a copy of the License at
!
!     http://www.apache.org/licenses/LICENSE-2.0
!
! Unless required by applicable law or agreed to in writing, software
! distributed under the License is distributed on an "AS IS" BASIS,
! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
! See the License for the specific language governing permissions and
! limitations under the License.

MODULE test_significand_bits
! Tests for the `significand_bits` function.
!
    USE pfunit_mod
    USE rp_emulator
    IMPLICIT NONE

#include "emutest_type.pf"

CONTAINS

#include "emutest_proc.pf"

    @TEST
    SUBROUTINE test_significand_bits_rpe_var (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        TYPE(rpe_var) :: input
        INTEGER       :: result, expected

        expected = RPE_DEFAULT_SBITS
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_rpe_var

    @TEST
    SUBROUTINE test_significand_bits_rpe_var_explicit (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        TYPE(rpe_var) :: input
        INTEGER       :: result, expected

        expected = 5
        input%sbits = 5
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_rpe_var_explicit

    @TEST
    SUBROUTINE test_significand_bits_double_precision (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        REAL(KIND=RPE_DOUBLE_KIND) :: input
        INTEGER                    :: result, expected

        expected = 52
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_double_precision

    @TEST
    SUBROUTINE test_significand_bits_single_precision (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        REAL(KIND=RPE_SINGLE_KIND) :: input
        INTEGER                    :: result, expected

        expected = 23
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_single_precision

    @TEST
    SUBROUTINE test_significand_bits_integer (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        INTEGER :: input
        INTEGER :: result, expected

        expected = 0
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_integer

    @TEST
    SUBROUTINE test_significand_bits_complex (context)
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        COMPLEX :: input
        INTEGER :: result, expected

        expected = 0
        result = significand_bits(input)
        @ASSERTEQUAL(expected, result)

    END SUBROUTINE test_significand_bits_complex

END MODULE test_significand_bits
