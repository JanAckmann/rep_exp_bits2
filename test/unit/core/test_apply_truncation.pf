! Copyright 2015-2016 Andrew Dawson, Peter Dueben
!
! Licensed under the Apache License, Version 2.0 (the "License");
! you may not use this file except in compliance with the License.
! You may obtain a copy of the License at
!
!     http://www.apache.org/licenses/LICENSE-2.0
!
! Unless required by applicable law or agreed to in writing, software
! distributed under the License is distributed on an "AS IS" BASIS,
! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
! See the License for the specific language governing permissions and
! limitations under the License.

MODULE test_apply_truncation
! Tests for the apply_truncation subroutine
!
    USE pfunit_mod
    USE suite_common, ONLY : utest64, &
                             min_significand_bits
    USE rp_emulator
    IMPLICIT NONE

#include "emutest_type.pf"

CONTAINS

#include "emutest_proc.pf"

    @TEST
    SUBROUTINE test_apply_truncation_ieee_half_null (context)
    ! Test that nothing different happens to values that are in-range
    ! for IEEE half-precision.
    !
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        TYPE(rpe_var) :: reduced1, reduced2
        REAL(KIND=RPE_REAL_KIND) :: reference

        RPE_DEFAULT_SBITS = 10

        RPE_IEEE_HALF = .TRUE.
        reduced1 = utest64

        RPE_IEEE_HALF = .FALSE.
        reduced2 = utest64

        @ASSERTEQUAL(reduced1%val, reduced2%val)
    END SUBROUTINE test_apply_truncation_ieee_half_null

    @TEST
    SUBROUTINE test_apply_truncation_ieee_half_overflow (context)
    ! Test that values overflowing IEEE half-precision produce infinity.
    !
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        TYPE(rpe_var) :: reduced

        RPE_DEFAULT_SBITS = 10
        RPE_IEEE_HALF = .TRUE.

        reduced = 655040
        @ASSERTTRUE(reduced > HUGE(1.0_RPE_REAL_KIND))

        reduced = -655040
        @ASSERTTRUE(reduced < -HUGE(1.0_RPE_REAL_KIND))
    END SUBROUTINE test_apply_truncation_ieee_half_overflow

    @TEST
    SUBROUTINE test_apply_truncation_ieee_half_subnormal (context)
    ! Test that subnormal IEEE half-precision values are rounded.
    !
        CLASS(EmulatorTest), INTENT(INOUT) :: context
        TYPE(rpe_var) :: reduced

        REAL(KIND=RPE_REAL_KIND) :: limit, delta

        RPE_DEFAULT_SBITS = 10
        RPE_IEEE_HALF = .TRUE.

        limit = 2.0_RPE_REAL_KIND ** (-14)
        delta = 2.0_RPE_REAL_KIND ** (-24)

        ! Check that positive values are rounded correctly and ensure the
        ! result of the rounding has no more than 10 bits in the significand.
        reduced = limit - delta - (2.0_RPE_REAL_KIND ** (-25))
        @ASSERTEQUAL(limit - 2 * delta, reduced%val)
        @ASSERTLESSTHANOREQUAL(min_significand_bits(reduced%val), 10)

        ! Repeat for negative values.
        reduced = -limit + delta + (2.0_RPE_REAL_KIND ** (-25))
        @ASSERTEQUAL(-limit + 2 * delta, reduced%val)
        @ASSERTLESSTHANOREQUAL(min_significand_bits(reduced%val), 10)
    END SUBROUTINE test_apply_truncation_ieee_half_subnormal

END MODULE test_apply_truncation
